"""

nestedloops2.py

this script uses nested loops anf a list of strings to output
the lyrics to the song "The Twelve Days of Christmas".
The words to the song are found in Github as onthefirstdayofchristmas.

Peter Koppelman July 8-9, 2017
"""

import sys
import time
import urllib.request

# read the url 
url = "https://raw.githubusercontent.com/PeterKoppelman/Python-INFO1-CE9990/master/onthefirstdayofchristmas"

# check to make sure that we can open the url
try:
    filename = urllib.request.urlopen(url) # we were successful
except urllib.error.URLError as error: 
    print("The url", url, "does not exist") # we weren't successful
    sys.exit(1)

# read the filename
lines = filename.readlines()

# lets print out the file in a readable manner one line at a time. Use decode statement to strip out non-ascii characters
for line in lines:
    # s = line.decode("utf-8")
    # print(s, end = "")
    print(line.decode("utf-8"), end = "") # the decode statement can be inbeded in the print command.

# now lets sort the lines
lines.sort()

# create a list with only one instance of each item in the original list. This is a 2 dimensional list.
uniqueline = []

for line in lines:
    # count the number of times that the line appears in the song
    i = lines.count(line)
    # strip our the non-ascii codes
    s = line.decode("utf-8")
    # strip out the newline that appears and replace is with '' (no space).
    # If we don't do this the print statement doesn't work properly.
    # name = s.strip("\n,''")
    name = s.strip("\n")
    # don't put the blank line between paragraphs in the song in uniqueline.
    if name != "":
        # check to see if the combination of the line in the song and the number of times it has appeared is in uniqueline.
        if [name, i] not in uniqueline: 
            uniqueline.append([name, i])
            

print("A list of unique phrases and the amount of times they appear in the song (sorted by phrase):")
for line in uniqueline:
     # print("\tThe phrase", line[0], "appears", line[1] ,"times.")
     print("\t", line[0], "appears", line[1] ,"times.")
     
uniqueline.sort(key = lambda line:line[1], reverse = True)
print("\n\nA list of unique phrases sorted by the number of times that they appear in the song:")
for line in uniqueline:
     print("\t", line[0], "appears", line[1] ,"times.")


sys.exit(0)
